#include <iostream>
#include <string>
#include <forward_list>

using namespace std;
class Observer {
private:
	string mName;
public:
	Observer(string name) {
		mName = name;
	}
	void OnNotify() {
		cout << mName << " says hello." << endl;
	}
};

class Subject {
public:
void AddObserver(Observer* observer) {
	mObservers.push_front(observer);
	}
void RemoveObserver(Observer* observer) {
	mObservers.remove(observer);
}
void NotifyAll() {
	for (auto& o : mObservers) {
		o->OnNotify();
	}
}
private:
	forward_list<Observer*> mObservers;
};

int main() {
	Subject subject;
	Observer observer1("observer - 1");
	Observer observer2("observer - 2");
	Observer observer3("observer - 3");

	subject.AddObserver(&observer1);
	subject.AddObserver(&observer2);
	subject.AddObserver(&observer3);
	subject.NotifyAll();

	return 0;
}
